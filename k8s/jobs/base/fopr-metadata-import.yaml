# FOPR Metadata Import Job
# This job imports gauge metadata from FOPR (Full Operational Period of Record) files
# It downloads and parses FOPR Excel files for all active gauges
# Usage: kubectl create -f k8s/jobs/fopr-metadata-import.yaml
apiVersion: batch/v1
kind: Job
metadata:
  generateName: fopr-metadata-import-
  labels:
    app: rain-tracker
    job-type: fopr-metadata-import
spec:
  ttlSecondsAfterFinished: 86400  # Clean up after 24 hours
  backoffLimit: 3  # Retry up to 3 times (network failures are common)
  template:
    metadata:
      labels:
        app: rain-tracker
        job-type: fopr-metadata-import
    spec:
      restartPolicy: OnFailure
      containers:
      - name: fopr-importer
        image: ghcr.io/your-org/rain-tracker-service:latest
        command: ["/bin/bash", "-c"]
        args:
          - |
            set -e

            echo "üöÄ Starting FOPR metadata import for all gauges"
            echo ""

            # Get list of all active gauge IDs from database
            GAUGES=$(psql "$DATABASE_URL" -t -c "SELECT station_id FROM gauges WHERE status = 'active' ORDER BY station_id;")

            if [ -z "$GAUGES" ]; then
              echo "‚ö†Ô∏è  No active gauges found in database"
              echo "üí° Tip: Run gauge list scraper first to populate gauges table"
              exit 1
            fi

            TOTAL=$(echo "$GAUGES" | wc -l)
            CURRENT=0
            SUCCESS=0
            FAILED=0

            echo "Found $TOTAL active gauges to process"
            echo ""

            for STATION_ID in $GAUGES; do
              CURRENT=$((CURRENT + 1))
              echo "[$CURRENT/$TOTAL] Processing gauge $STATION_ID..."

              # Download FOPR file for this gauge
              FOPR_URL="${MCFCD_BASE_URL}FOPR/${STATION_ID}_FOPR.xlsx"
              TEMP_FILE="/tmp/${STATION_ID}_FOPR.xlsx"

              if curl -f -s -o "$TEMP_FILE" "$FOPR_URL"; then
                echo "  ‚úÖ Downloaded FOPR file"

                # Import FOPR daily data using CLI
                if /app/historical-import \
                    --database-url "$DATABASE_URL" \
                    --mode fopr \
                    --file "$TEMP_FILE" \
                    --station-id "$STATION_ID" \
                    -y; then

                  echo "  ‚úÖ Imported FOPR daily data"

                  # Update gauge table to track successful import
                  psql "$DATABASE_URL" -c "
                    UPDATE gauges
                    SET fopr_available = true,
                        fopr_last_import_date = CURRENT_DATE,
                        fopr_last_checked_date = CURRENT_DATE
                    WHERE station_id = '$STATION_ID';
                  "

                  SUCCESS=$((SUCCESS + 1))
                else
                  echo "  ‚ö†Ô∏è  FOPR import failed, but file exists"
                  FAILED=$((FAILED + 1))
                fi

                rm -f "$TEMP_FILE"
              else
                echo "  ‚ùå FOPR file not available (404 or error)"

                # Mark as unavailable in database
                psql "$DATABASE_URL" -c "
                  UPDATE gauges
                  SET fopr_available = false,
                      fopr_last_checked_date = CURRENT_DATE
                  WHERE station_id = '$STATION_ID';
                "

                FAILED=$((FAILED + 1))
              fi

              echo ""

              # Rate limiting to avoid overwhelming MCFCD server
              sleep 2
            done

            echo "=================================================="
            echo "FOPR Metadata Import Complete"
            echo "=================================================="
            echo "Total gauges:     $TOTAL"
            echo "Successful:       $SUCCESS"
            echo "Not available:    $FAILED"
            echo ""
        env:
        - name: DATABASE_URL
          valueFrom:
            secretKeyRef:
              name: db-secrets
              key: DATABASE_URL
        - name: MCFCD_BASE_URL
          value: "https://alert.fcd.maricopa.gov/alert/Rain/"
        - name: RUST_LOG
          value: "info"
        resources:
          requests:
            memory: "256Mi"
            cpu: "250m"
          limits:
            memory: "512Mi"
            cpu: "500m"
---
# Alternative: FOPR Import for a specific gauge
# Usage: Edit STATION_ID value, then: kubectl create -f this file
apiVersion: batch/v1
kind: Job
metadata:
  generateName: fopr-single-gauge-
  labels:
    app: rain-tracker
    job-type: fopr-single-gauge
spec:
  ttlSecondsAfterFinished: 86400
  backoffLimit: 2
  template:
    metadata:
      labels:
        app: rain-tracker
        job-type: fopr-single-gauge
    spec:
      restartPolicy: OnFailure
      containers:
      - name: fopr-importer
        image: ghcr.io/your-org/rain-tracker-service:latest
        command: ["/bin/bash", "-c"]
        args:
          - |
            set -e

            echo "üöÄ Importing FOPR metadata for gauge $STATION_ID"

            FOPR_URL="${MCFCD_BASE_URL}FOPR/${STATION_ID}_FOPR.xlsx"
            TEMP_FILE="/tmp/${STATION_ID}_FOPR.xlsx"

            echo "Downloading from: $FOPR_URL"
            curl -f -o "$TEMP_FILE" "$FOPR_URL"

            echo "‚úÖ Downloaded FOPR file"
            echo ""

            # Import FOPR daily data
            echo "üìä Importing FOPR daily data for gauge $STATION_ID..."
            /app/historical-import \
              --database-url "$DATABASE_URL" \
              --mode fopr \
              --file "$TEMP_FILE" \
              --station-id "$STATION_ID" \
              -y

            # Update gauge table
            psql "$DATABASE_URL" -c "
              UPDATE gauges
              SET fopr_available = true,
                  fopr_last_import_date = CURRENT_DATE,
                  fopr_last_checked_date = CURRENT_DATE
              WHERE station_id = '$STATION_ID';
            "

            echo ""
            echo "‚úÖ FOPR import complete for gauge $STATION_ID"
        env:
        - name: STATION_ID
          value: "59700"  # Change this: Gauge station ID
        - name: DATABASE_URL
          valueFrom:
            secretKeyRef:
              name: db-secrets
              key: DATABASE_URL
        - name: MCFCD_BASE_URL
          value: "https://alert.fcd.maricopa.gov/alert/Rain/"
        resources:
          requests:
            memory: "128Mi"
            cpu: "100m"
          limits:
            memory: "256Mi"
            cpu: "250m"
